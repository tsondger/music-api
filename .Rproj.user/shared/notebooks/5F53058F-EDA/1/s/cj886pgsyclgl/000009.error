{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"dbGetQuery(conn, statement = \"\\n                        select \\n                          t.TrackId as Id\\n                        , t.Name as TrackName\\n                        , t.Composer as Composer\\n                        , t.Milliseconds as Milliseconds\\n                        , a.Title as AlbumTitle\\n                        , g.Name as Genre\\n                        from \\n                          tracks as t\\n                        left join albums as a\\n                          on a.AlbumId = t.AlbumId\\n                        left join genres as g\\n                          on g.GenreId = t.GenreId\\n                        where \\n                        #t.TrackId=1\\n                        #and\\n                        g.Name = 'Rock'\\n                        \")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"dbGetQuery(conn, statement = \"\\n                        select \\n                          t.TrackId as Id\\n                        , t.Name as TrackName\\n                        , t.Composer as Composer\\n                        , t.Milliseconds as Milliseconds\\n                        , a.Title as AlbumTitle\\n                        , g.Name as Genre\\n                        from \\n                          tracks as t\\n                        left join albums as a\\n                          on a.AlbumId = t.AlbumId\\n                        left join genres as g\\n                          on g.GenreId = t.GenreId\\n                        where \\n                        #t.TrackId=1\\n                        #and\\n                        g.Name = 'Rock'\\n                        \")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".local(conn, statement, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"dbSendQuery(conn, statement, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"dbSendQuery(conn, statement, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".local(conn, statement, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"new(\"SQLiteResult\", sql = statement, ptr = result_create(conn@ptr, \n    statement), conn = conn, bigint = conn@bigint)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"initialize(value, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"initialize(value, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"result_create(conn@ptr, statement)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(structure(list(message = \"near \\\".\\\": syntax error\", call = NULL, \n    cppstack = NULL), class = c(\"Rcpp::exception\", \"C++Error\", \n\"error\", \"condition\")))","line_number":0}],"message":"Error: near \".\": syntax error\n"}